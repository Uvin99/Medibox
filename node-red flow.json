[
  {
      "id": "03278fe65db6b388",
      "type": "tab",
      "label": "Flow 1",
      "disabled": false,
      "info": "",
      "env": []
  },
  {
      "id": "6e3fd1e24bac90ad",
      "type": "ui_switch",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Main Switch",
      "tooltip": "",
      "group": "c06f466dbec9db88",
      "order": 1,
      "width": 6,
      "height": 1,
      "passthru": true,
      "decouple": "false",
      "topic": "topic",
      "topicType": "msg",
      "style": "",
      "onvalue": "1",
      "onvalueType": "num",
      "onicon": "",
      "oncolor": "",
      "offvalue": "0",
      "offvalueType": "num",
      "officon": "",
      "offcolor": "",
      "animate": false,
      "className": "",
      "x": 830,
      "y": 40,
      "wires": [
          [
              "28ebb383fb86a3e9",
              "1eec4d0502904e30"
          ]
      ]
  },
  {
      "id": "81101b33f48b44ef",
      "type": "ui_slider",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Minimum Angle",
      "tooltip": "",
      "group": "95870bd4bd4cda3d",
      "order": 1,
      "width": 0,
      "height": 0,
      "passthru": true,
      "outs": "end",
      "topic": "topic",
      "topicType": "str",
      "min": 0,
      "max": "180",
      "step": "15",
      "className": "",
      "x": 400,
      "y": 140,
      "wires": [
          [
              "dcc0e360aa9f8bef"
          ]
      ]
  },
  {
      "id": "218748b39c61bc34",
      "type": "ui_slider",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Controlling factor",
      "tooltip": "",
      "group": "95870bd4bd4cda3d",
      "order": 2,
      "width": 0,
      "height": 0,
      "passthru": true,
      "outs": "end",
      "topic": "topic",
      "topicType": "msg",
      "min": 0,
      "max": "1",
      "step": "0.25",
      "className": "",
      "x": 410,
      "y": 200,
      "wires": [
          [
              "f5a2dc3e153110b3",
              "c4fd86aef3c0ae4e"
          ]
      ]
  },
  {
      "id": "3cecee6e54306c60",
      "type": "ui_switch",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Schedule",
      "tooltip": "",
      "group": "6f939c528b0be4ae",
      "order": 1,
      "width": 0,
      "height": 0,
      "passthru": true,
      "decouple": "false",
      "topic": "topic",
      "topicType": "msg",
      "style": "",
      "onvalue": "true",
      "onvalueType": "bool",
      "onicon": "",
      "oncolor": "",
      "offvalue": "false",
      "offvalueType": "bool",
      "officon": "",
      "offcolor": "",
      "animate": false,
      "className": "",
      "x": 420,
      "y": 300,
      "wires": [
          [
              "771ca594f631ea98"
          ]
      ]
  },
  {
      "id": "e7d83dcbcfbd3091",
      "type": "ui_numeric",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Days",
      "tooltip": "",
      "group": "6f939c528b0be4ae",
      "order": 2,
      "width": 0,
      "height": 0,
      "wrap": false,
      "passthru": true,
      "topic": "topic",
      "topicType": "msg",
      "format": "{{value}}",
      "min": "1",
      "max": "5",
      "step": 1,
      "className": "",
      "x": 670,
      "y": 400,
      "wires": [
          [
              "e3fa5f06c5dd40e4"
          ]
      ]
  },
  {
      "id": "cf473738265b83af",
      "type": "ui_switch",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "",
      "tooltip": "",
      "group": "6f939c528b0be4ae",
      "order": 3,
      "width": 1,
      "height": 1,
      "passthru": true,
      "decouple": "false",
      "topic": "topic",
      "topicType": "msg",
      "style": "",
      "onvalue": "true",
      "onvalueType": "bool",
      "onicon": "",
      "oncolor": "",
      "offvalue": "false",
      "offvalueType": "bool",
      "officon": "",
      "offcolor": "",
      "animate": false,
      "className": "",
      "x": 490,
      "y": 500,
      "wires": [
          [
              "5ecedb46c3b2d392"
          ]
      ]
  },
  {
      "id": "48c8f03ed7239d90",
      "type": "ui_text_input",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "",
      "tooltip": "",
      "group": "6f939c528b0be4ae",
      "order": 4,
      "width": 5,
      "height": 1,
      "passthru": true,
      "mode": "time",
      "delay": 300,
      "topic": "topic",
      "sendOnBlur": true,
      "className": "",
      "topicType": "msg",
      "x": 500,
      "y": 560,
      "wires": [
          [
              "a152b6be2464aec3"
          ]
      ]
  },
  {
      "id": "ca4af46b465a9d55",
      "type": "ui_switch",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "",
      "tooltip": "",
      "group": "6f939c528b0be4ae",
      "order": 5,
      "width": 1,
      "height": 1,
      "passthru": true,
      "decouple": "false",
      "topic": "topic",
      "topicType": "msg",
      "style": "",
      "onvalue": "true",
      "onvalueType": "bool",
      "onicon": "",
      "oncolor": "",
      "offvalue": "false",
      "offvalueType": "bool",
      "officon": "",
      "offcolor": "",
      "animate": false,
      "className": "",
      "x": 490,
      "y": 620,
      "wires": [
          [
              "f3126434fb2e3a5e"
          ]
      ]
  },
  {
      "id": "6af1eb1c50275622",
      "type": "ui_text_input",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "",
      "tooltip": "",
      "group": "6f939c528b0be4ae",
      "order": 6,
      "width": 5,
      "height": 1,
      "passthru": true,
      "mode": "time",
      "delay": 300,
      "topic": "topic",
      "sendOnBlur": true,
      "className": "",
      "topicType": "msg",
      "x": 500,
      "y": 660,
      "wires": [
          [
              "ee84a93c92f58e9f"
          ]
      ]
  },
  {
      "id": "d59a6f9711ea177a",
      "type": "ui_switch",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "",
      "tooltip": "",
      "group": "6f939c528b0be4ae",
      "order": 7,
      "width": 1,
      "height": 1,
      "passthru": true,
      "decouple": "false",
      "topic": "topic",
      "topicType": "msg",
      "style": "",
      "onvalue": "true",
      "onvalueType": "bool",
      "onicon": "",
      "oncolor": "",
      "offvalue": "false",
      "offvalueType": "bool",
      "officon": "",
      "offcolor": "",
      "animate": false,
      "className": "",
      "x": 490,
      "y": 740,
      "wires": [
          [
              "b375f326e80604bd"
          ]
      ]
  },
  {
      "id": "e1ac8e488d866b2e",
      "type": "ui_text_input",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "",
      "tooltip": "",
      "group": "6f939c528b0be4ae",
      "order": 8,
      "width": 5,
      "height": 1,
      "passthru": true,
      "mode": "time",
      "delay": 300,
      "topic": "topic",
      "sendOnBlur": true,
      "className": "",
      "topicType": "msg",
      "x": 500,
      "y": 780,
      "wires": [
          [
              "dedbefa83899ba15"
          ]
      ]
  },
  {
      "id": "d594d4e1661d9bb4",
      "type": "ui_gauge",
      "z": "03278fe65db6b388",
      "name": "",
      "group": "7f5537f35d1d89c4",
      "order": 2,
      "width": 0,
      "height": 0,
      "gtype": "gage",
      "title": "gauge",
      "label": "Value",
      "format": "{{payload}}",
      "min": 0,
      "max": "1",
      "colors": [
          "#00b500",
          "#e6e600",
          "#ca3838"
      ],
      "seg1": "0.35",
      "seg2": "0.7",
      "className": "",
      "x": 650,
      "y": 1460,
      "wires": []
  },
  {
      "id": "6ed84bd2a4dc9016",
      "type": "ui_chart",
      "z": "03278fe65db6b388",
      "name": "",
      "group": "7f5537f35d1d89c4",
      "order": 3,
      "width": 0,
      "height": 0,
      "label": "chart",
      "chartType": "line",
      "legend": "false",
      "xformat": "HH:mm:ss",
      "interpolate": "linear",
      "nodata": "",
      "dot": false,
      "ymin": "0",
      "ymax": "1",
      "removeOlder": "5",
      "removeOlderPoints": "50",
      "removeOlderUnit": "60",
      "cutout": 0,
      "useOneColor": false,
      "useUTC": false,
      "colors": [
          "#1f77b4",
          "#aec7e8",
          "#ff7f0e",
          "#2ca02c",
          "#98df8a",
          "#d62728",
          "#ff9896",
          "#9467bd",
          "#c5b0d5"
      ],
      "outputs": 1,
      "useDifferentColor": false,
      "className": "",
      "x": 650,
      "y": 1540,
      "wires": [
          []
      ]
  },
  {
      "id": "5b40f480ce63aced",
      "type": "ui_gauge",
      "z": "03278fe65db6b388",
      "name": "",
      "group": "af359eb7cc82a93f",
      "order": 4,
      "width": 0,
      "height": 0,
      "gtype": "gage",
      "title": "gauge",
      "label": "Value",
      "format": "{{payload}}",
      "min": 0,
      "max": "50",
      "colors": [
          "#00b500",
          "#e6e600",
          "#ca3838"
      ],
      "seg1": "16",
      "seg2": "32",
      "className": "",
      "x": 550,
      "y": 1900,
      "wires": []
  },
  {
      "id": "45fc8a622995853c",
      "type": "function",
      "z": "03278fe65db6b388",
      "name": "GetTemperature",
      "func": "let val = Math.random()*50\nval = Math.round(val)\n\n\nreturn {\n    payload:val\n    \n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 200,
      "y": 1980,
      "wires": [
          []
      ]
  },
  {
      "id": "6ae22b066750ab22",
      "type": "ui_chart",
      "z": "03278fe65db6b388",
      "name": "",
      "group": "af359eb7cc82a93f",
      "order": 5,
      "width": 0,
      "height": 0,
      "label": "chart",
      "chartType": "line",
      "legend": "false",
      "xformat": "HH:mm:ss",
      "interpolate": "linear",
      "nodata": "",
      "dot": false,
      "ymin": "0",
      "ymax": "50",
      "removeOlder": "5",
      "removeOlderPoints": "50",
      "removeOlderUnit": "60",
      "cutout": 0,
      "useOneColor": false,
      "useUTC": false,
      "colors": [
          "#1f77b4",
          "#aec7e8",
          "#ff7f0e",
          "#2ca02c",
          "#98df8a",
          "#d62728",
          "#ff9896",
          "#9467bd",
          "#c5b0d5"
      ],
      "outputs": 1,
      "useDifferentColor": false,
      "className": "",
      "x": 550,
      "y": 1960,
      "wires": [
          []
      ]
  },
  {
      "id": "a37e1a3ad0dbebb1",
      "type": "ui_gauge",
      "z": "03278fe65db6b388",
      "name": "",
      "group": "1a115d827a1091dd",
      "order": 4,
      "width": 0,
      "height": 0,
      "gtype": "gage",
      "title": "gauge",
      "label": "Value",
      "format": "{{payload}}",
      "min": 0,
      "max": "100",
      "colors": [
          "#00b500",
          "#e6e600",
          "#ca3838"
      ],
      "seg1": "33",
      "seg2": "66",
      "className": "",
      "x": 630,
      "y": 2440,
      "wires": []
  },
  {
      "id": "0c98a1760b02bfb6",
      "type": "function",
      "z": "03278fe65db6b388",
      "name": "GetHumidity",
      "func": "let val = Math.random()*50\nval = Math.round(val)\n\n//\",msg.payload);\n\nreturn {\n    payload:val\n    \n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 190,
      "y": 2580,
      "wires": [
          []
      ]
  },
  {
      "id": "7f1db70876ddddbe",
      "type": "ui_chart",
      "z": "03278fe65db6b388",
      "name": "",
      "group": "1a115d827a1091dd",
      "order": 5,
      "width": 0,
      "height": 0,
      "label": "chart",
      "chartType": "line",
      "legend": "false",
      "xformat": "HH:mm:ss",
      "interpolate": "linear",
      "nodata": "",
      "dot": false,
      "ymin": "0",
      "ymax": "100",
      "removeOlder": "5",
      "removeOlderPoints": "50",
      "removeOlderUnit": "60",
      "cutout": 0,
      "useOneColor": false,
      "useUTC": false,
      "colors": [
          "#1f77b4",
          "#aec7e8",
          "#ff7f0e",
          "#2ca02c",
          "#98df8a",
          "#d62728",
          "#ff9896",
          "#9467bd",
          "#c5b0d5"
      ],
      "outputs": 1,
      "useDifferentColor": false,
      "className": "",
      "x": 630,
      "y": 2520,
      "wires": [
          []
      ]
  },
  {
      "id": "b7bd342e18f1fe79",
      "type": "comment",
      "z": "03278fe65db6b388",
      "name": "Light Intensity",
      "info": "",
      "x": 210,
      "y": 1400,
      "wires": []
  },
  {
      "id": "6fd4e6d5f5de6586",
      "type": "comment",
      "z": "03278fe65db6b388",
      "name": "Temperature",
      "info": "",
      "x": 190,
      "y": 1600,
      "wires": []
  },
  {
      "id": "d83716ee9f22911f",
      "type": "comment",
      "z": "03278fe65db6b388",
      "name": "Humidity",
      "info": "",
      "x": 160,
      "y": 2200,
      "wires": []
  },
  {
      "id": "01b69b064b2280b2",
      "type": "ui_numeric",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Min",
      "tooltip": "",
      "group": "af359eb7cc82a93f",
      "order": 2,
      "width": 0,
      "height": 0,
      "wrap": false,
      "passthru": true,
      "topic": "topic",
      "topicType": "msg",
      "format": "{{value}}",
      "min": 0,
      "max": "20",
      "step": 1,
      "className": "",
      "x": 450,
      "y": 1660,
      "wires": [
          [
              "96a1e4d8735c4a62"
          ]
      ]
  },
  {
      "id": "472d287d436c7df8",
      "type": "ui_numeric",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Max",
      "tooltip": "",
      "group": "af359eb7cc82a93f",
      "order": 3,
      "width": 0,
      "height": 0,
      "wrap": false,
      "passthru": true,
      "topic": "topic",
      "topicType": "msg",
      "format": "{{value}}",
      "min": "30",
      "max": "50",
      "step": 1,
      "className": "",
      "x": 450,
      "y": 1700,
      "wires": [
          [
              "4c9d83dfea18eff1"
          ]
      ]
  },
  {
      "id": "e2516e7f24252046",
      "type": "ui_numeric",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Min",
      "tooltip": "",
      "group": "1a115d827a1091dd",
      "order": 2,
      "width": 0,
      "height": 0,
      "wrap": false,
      "passthru": true,
      "topic": "topic",
      "topicType": "msg",
      "format": "{{value}}",
      "min": 0,
      "max": "30",
      "step": 1,
      "className": "",
      "x": 590,
      "y": 2240,
      "wires": [
          [
              "9f62989c2d68dc59"
          ]
      ]
  },
  {
      "id": "b3702a074a04d8f0",
      "type": "ui_numeric",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Max",
      "tooltip": "",
      "group": "1a115d827a1091dd",
      "order": 3,
      "width": 0,
      "height": 0,
      "wrap": false,
      "passthru": true,
      "topic": "topic",
      "topicType": "msg",
      "format": "{{value}}",
      "min": "75",
      "max": "100",
      "step": 1,
      "className": "",
      "x": 590,
      "y": 2300,
      "wires": [
          [
              "19b48eefd860ca31"
          ]
      ]
  },
  {
      "id": "19b48eefd860ca31",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "",
      "rules": [
          {
              "t": "set",
              "p": "max2",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 820,
      "y": 2300,
      "wires": [
          []
      ]
  },
  {
      "id": "9f62989c2d68dc59",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "",
      "rules": [
          {
              "t": "set",
              "p": "min2",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 810,
      "y": 2240,
      "wires": [
          []
      ]
  },
  {
      "id": "96a1e4d8735c4a62",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "",
      "rules": [
          {
              "t": "set",
              "p": "min1",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 710,
      "y": 1660,
      "wires": [
          []
      ]
  },
  {
      "id": "4c9d83dfea18eff1",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "",
      "rules": [
          {
              "t": "set",
              "p": "max1",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 720,
      "y": 1700,
      "wires": [
          []
      ]
  },
  {
      "id": "3e9528a61a36fe61",
      "type": "ui_text",
      "z": "03278fe65db6b388",
      "group": "af359eb7cc82a93f",
      "order": 6,
      "width": 0,
      "height": 0,
      "name": "",
      "label": "Temperature Condition",
      "format": "{{msg.out}}",
      "layout": "row-spread",
      "className": "",
      "x": 840,
      "y": 2080,
      "wires": []
  },
  {
      "id": "f5b3d641e31eb3ef",
      "type": "function",
      "z": "03278fe65db6b388",
      "name": "checkTemperature",
      "func": "const min1 = flow.get(\"min1\");\nconst max1 = flow.get(\"max1\");\nconst temp = flow.get(\"temp\");\n\nlet result ;\n\nif (temp < min1){\n    result = \"Warning! Temperature is LOW\";\n}else if (temp > max1){\n    result =\"Warning! Temperature is HIGH\";\n}\nelse  {\n    result = \"Temperature is Okay\";\n    \n}\n\n\nreturn{\n    out:result\n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 590,
      "y": 2080,
      "wires": [
          [
              "3e9528a61a36fe61"
          ]
      ]
  },
  {
      "id": "46ccb6cffad9f0fe",
      "type": "ui_text",
      "z": "03278fe65db6b388",
      "group": "1a115d827a1091dd",
      "order": 6,
      "width": 0,
      "height": 0,
      "name": "",
      "label": "Humidity Condition",
      "format": "{{msg.out}}",
      "layout": "row-spread",
      "className": "",
      "x": 870,
      "y": 2660,
      "wires": []
  },
  {
      "id": "5e569f8bcb965b8b",
      "type": "function",
      "z": "03278fe65db6b388",
      "name": "checkHumidity",
      "func": "const min2 = flow.get(\"min2\");\nconst max2 = flow.get(\"max2\");\nconst humi = flow.get(\"humi\");\n\nlet result ;\n\nif (humi < min2){\n    result = \"Warning! Humidity is LOW\";\n}else if (humi > max2){\n    result =\"Warning! Humidity is HIGH\";\n}\nelse  {\n    result = \"Humidity is Okay\";\n    \n}\n\n\nreturn{\n    out:result\n};",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 640,
      "y": 2660,
      "wires": [
          [
              "46ccb6cffad9f0fe"
          ]
      ]
  },
  {
      "id": "3402781b3f253496",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "",
      "rules": [
          {
              "t": "set",
              "p": "humi",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 650,
      "y": 2580,
      "wires": [
          []
      ]
  },
  {
      "id": "3d7903f4c7730b23",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "",
      "rules": [
          {
              "t": "set",
              "p": "temp",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 570,
      "y": 2020,
      "wires": [
          []
      ]
  },
  {
      "id": "0b1b290297a22fe3",
      "type": "ui_text_input",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Delay(s)",
      "tooltip": "",
      "group": "e886155af4f13c04",
      "order": 1,
      "width": 0,
      "height": 0,
      "passthru": true,
      "mode": "number",
      "delay": 300,
      "topic": "topic",
      "sendOnBlur": true,
      "className": "",
      "topicType": "msg",
      "x": 540,
      "y": 2860,
      "wires": [
          [
              "edf7d59da73f3067"
          ]
      ]
  },
  {
      "id": "a78e592f189be178",
      "type": "ui_text_input",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Frequency (Hz)",
      "tooltip": "",
      "group": "e886155af4f13c04",
      "order": 2,
      "width": 0,
      "height": 0,
      "passthru": true,
      "mode": "text",
      "delay": 300,
      "topic": "topic",
      "sendOnBlur": true,
      "className": "",
      "topicType": "msg",
      "x": 540,
      "y": 2920,
      "wires": [
          [
              "30cae5d32ca64ea6"
          ]
      ]
  },
  {
      "id": "f98eb1bf01b9749d",
      "type": "ui_dropdown",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "",
      "tooltip": "",
      "place": "Select option",
      "group": "e886155af4f13c04",
      "order": 4,
      "width": 0,
      "height": 0,
      "passthru": true,
      "multiple": false,
      "options": [
          {
              "label": "Repeated on-off",
              "value": "1",
              "type": "str"
          },
          {
              "label": "Continous",
              "value": "2",
              "type": "str"
          }
      ],
      "payload": "",
      "topic": "topic",
      "topicType": "msg",
      "className": "",
      "x": 540,
      "y": 3000,
      "wires": [
          [
              "618ab980a4953422"
          ]
      ]
  },
  {
      "id": "44276530d16bbb68",
      "type": "comment",
      "z": "03278fe65db6b388",
      "name": "Settings tab",
      "info": "",
      "x": 170,
      "y": 2780,
      "wires": []
  },
  {
      "id": "46324e650b985f95",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "Show Group",
      "rules": [
          {
              "t": "set",
              "p": "payload",
              "pt": "msg",
              "to": "{\"group\":{\"show\":[\"Medibox_Light_Intensity\"]}}",
              "tot": "json"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 730,
      "y": 3680,
      "wires": [
          [
              "06d1ea800e992a22"
          ]
      ]
  },
  {
      "id": "d822751844bb785b",
      "type": "switch",
      "z": "03278fe65db6b388",
      "name": "",
      "property": "payload",
      "propertyType": "msg",
      "rules": [
          {
              "t": "true"
          },
          {
              "t": "false"
          }
      ],
      "checkall": "true",
      "repair": false,
      "outputs": 2,
      "x": 550,
      "y": 3740,
      "wires": [
          [
              "46324e650b985f95"
          ],
          [
              "25f4d9520ba446ae"
          ]
      ]
  },
  {
      "id": "25f4d9520ba446ae",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "Hide Group",
      "rules": [
          {
              "t": "set",
              "p": "payload",
              "pt": "msg",
              "to": "{\"group\":{\"hide\":[\"Medibox_Light_Intensity\"]}}",
              "tot": "json"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 730,
      "y": 3780,
      "wires": [
          [
              "06d1ea800e992a22"
          ]
      ]
  },
  {
      "id": "bf25441f3c723b9e",
      "type": "ui_switch",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Light Intensity ",
      "tooltip": "",
      "group": "9f845f9b1b22e142",
      "order": 0,
      "width": 0,
      "height": 0,
      "passthru": true,
      "decouple": "false",
      "topic": "topic",
      "topicType": "msg",
      "style": "",
      "onvalue": "true",
      "onvalueType": "bool",
      "onicon": "",
      "oncolor": "",
      "offvalue": "false",
      "offvalueType": "bool",
      "officon": "",
      "offcolor": "",
      "animate": false,
      "className": "",
      "x": 340,
      "y": 3740,
      "wires": [
          [
              "d822751844bb785b"
          ]
      ]
  },
  {
      "id": "31032827bd37105d",
      "type": "ui_switch",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Temperature",
      "tooltip": "",
      "group": "9f845f9b1b22e142",
      "order": 0,
      "width": 0,
      "height": 0,
      "passthru": true,
      "decouple": "false",
      "topic": "topic",
      "topicType": "msg",
      "style": "",
      "onvalue": "true",
      "onvalueType": "bool",
      "onicon": "",
      "oncolor": "",
      "offvalue": "false",
      "offvalueType": "bool",
      "officon": "",
      "offcolor": "",
      "animate": false,
      "className": "",
      "x": 350,
      "y": 3300,
      "wires": [
          [
              "50c16d77b3b30154"
          ]
      ]
  },
  {
      "id": "bc7d7672aab25412",
      "type": "ui_switch",
      "z": "03278fe65db6b388",
      "name": "",
      "label": "Humidity",
      "tooltip": "",
      "group": "9f845f9b1b22e142",
      "order": 0,
      "width": 0,
      "height": 0,
      "passthru": true,
      "decouple": "false",
      "topic": "topic",
      "topicType": "msg",
      "style": "",
      "onvalue": "true",
      "onvalueType": "bool",
      "onicon": "",
      "oncolor": "",
      "offvalue": "false",
      "offvalueType": "bool",
      "officon": "",
      "offcolor": "",
      "animate": false,
      "className": "",
      "x": 340,
      "y": 3520,
      "wires": [
          [
              "11bc44b785329002"
          ]
      ]
  },
  {
      "id": "06d1ea800e992a22",
      "type": "ui_ui_control",
      "z": "03278fe65db6b388",
      "name": "",
      "events": "all",
      "x": 1020,
      "y": 3500,
      "wires": [
          []
      ]
  },
  {
      "id": "ea5c525184bd4ab9",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "Show Group",
      "rules": [
          {
              "t": "set",
              "p": "payload",
              "pt": "msg",
              "to": "{\"group\":{\"show\":[\"Medibox_Humidity\"]}}",
              "tot": "json"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 730,
      "y": 3460,
      "wires": [
          [
              "06d1ea800e992a22"
          ]
      ]
  },
  {
      "id": "11bc44b785329002",
      "type": "switch",
      "z": "03278fe65db6b388",
      "name": "",
      "property": "payload",
      "propertyType": "msg",
      "rules": [
          {
              "t": "true"
          },
          {
              "t": "false"
          }
      ],
      "checkall": "true",
      "repair": false,
      "outputs": 2,
      "x": 550,
      "y": 3520,
      "wires": [
          [
              "ea5c525184bd4ab9"
          ],
          [
              "2e58107c4936b990"
          ]
      ]
  },
  {
      "id": "2e58107c4936b990",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "Hide Group",
      "rules": [
          {
              "t": "set",
              "p": "payload",
              "pt": "msg",
              "to": "{\"group\":{\"hide\":[\"Medibox_Humidity\"]}}",
              "tot": "json"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 730,
      "y": 3560,
      "wires": [
          [
              "06d1ea800e992a22"
          ]
      ]
  },
  {
      "id": "e4947557c08b6c7a",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "Show Group",
      "rules": [
          {
              "t": "set",
              "p": "payload",
              "pt": "msg",
              "to": "{\"group\":{\"show\":[\"Medibox_Temperature\"]}}",
              "tot": "json"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 730,
      "y": 3240,
      "wires": [
          [
              "06d1ea800e992a22"
          ]
      ]
  },
  {
      "id": "50c16d77b3b30154",
      "type": "switch",
      "z": "03278fe65db6b388",
      "name": "",
      "property": "payload",
      "propertyType": "msg",
      "rules": [
          {
              "t": "true"
          },
          {
              "t": "false"
          }
      ],
      "checkall": "true",
      "repair": false,
      "outputs": 2,
      "x": 550,
      "y": 3300,
      "wires": [
          [
              "e4947557c08b6c7a"
          ],
          [
              "1d94eb87ff24cf0c"
          ]
      ]
  },
  {
      "id": "1d94eb87ff24cf0c",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "Hide Group",
      "rules": [
          {
              "t": "set",
              "p": "payload",
              "pt": "msg",
              "to": "{\"group\":{\"hide\":[\"Medibox_Temperature\"]}}",
              "tot": "json"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 730,
      "y": 3340,
      "wires": [
          [
              "06d1ea800e992a22"
          ]
      ]
  },
  {
      "id": "c1e86b4a56fa5372",
      "type": "mqtt in",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "TEMP",
      "qos": "2",
      "datatype": "auto-detect",
      "broker": "7ab67f0d3e4b54f5",
      "nl": false,
      "rap": true,
      "rh": 0,
      "inputs": 0,
      "x": 290,
      "y": 1900,
      "wires": [
          [
              "233db9b9e1b4f7e8",
              "5b40f480ce63aced",
              "6ae22b066750ab22",
              "3d7903f4c7730b23",
              "f5b3d641e31eb3ef"
          ]
      ]
  },
  {
      "id": "233db9b9e1b4f7e8",
      "type": "debug",
      "z": "03278fe65db6b388",
      "name": "debug 1",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "payload",
      "targetType": "msg",
      "statusVal": "",
      "statusType": "auto",
      "x": 560,
      "y": 1840,
      "wires": []
  },
  {
      "id": "dfa89a5ead44a24b",
      "type": "mqtt in",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "HUMIDITY",
      "qos": "2",
      "datatype": "auto-detect",
      "broker": "7ab67f0d3e4b54f5",
      "nl": false,
      "rap": true,
      "rh": 0,
      "inputs": 0,
      "x": 360,
      "y": 2480,
      "wires": [
          [
              "a37e1a3ad0dbebb1",
              "7f1db70876ddddbe",
              "3402781b3f253496",
              "5e569f8bcb965b8b",
              "cfbd504a517bb186"
          ]
      ]
  },
  {
      "id": "cfbd504a517bb186",
      "type": "debug",
      "z": "03278fe65db6b388",
      "name": "debug 2",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "payload",
      "targetType": "msg",
      "statusVal": "",
      "statusType": "auto",
      "x": 640,
      "y": 2380,
      "wires": []
  },
  {
      "id": "28ebb383fb86a3e9",
      "type": "mqtt out",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "Main-ON-OFF",
      "qos": "",
      "retain": "false",
      "respTopic": "",
      "contentType": "",
      "userProps": "",
      "correl": "",
      "expiry": "",
      "broker": "7ab67f0d3e4b54f5",
      "x": 1060,
      "y": 40,
      "wires": []
  },
  {
      "id": "fc324ac4d8fa0404",
      "type": "mqtt in",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "INTENSITY",
      "qos": "2",
      "datatype": "auto-detect",
      "broker": "7ab67f0d3e4b54f5",
      "nl": false,
      "rap": true,
      "rh": 0,
      "inputs": 0,
      "x": 370,
      "y": 1500,
      "wires": [
          [
              "d594d4e1661d9bb4",
              "6ed84bd2a4dc9016"
          ]
      ]
  },
  {
      "id": "dcc0e360aa9f8bef",
      "type": "mqtt out",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "min-Angle",
      "qos": "",
      "retain": "false",
      "respTopic": "",
      "contentType": "",
      "userProps": "",
      "correl": "",
      "expiry": "",
      "broker": "7ab67f0d3e4b54f5",
      "x": 640,
      "y": 140,
      "wires": []
  },
  {
      "id": "edf7d59da73f3067",
      "type": "mqtt out",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "delay",
      "qos": "",
      "retain": "false",
      "respTopic": "",
      "contentType": "",
      "userProps": "",
      "correl": "",
      "expiry": "",
      "broker": "7ab67f0d3e4b54f5",
      "x": 910,
      "y": 2860,
      "wires": []
  },
  {
      "id": "30cae5d32ca64ea6",
      "type": "mqtt out",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "freq",
      "qos": "",
      "retain": "false",
      "respTopic": "",
      "contentType": "",
      "userProps": "",
      "correl": "",
      "expiry": "",
      "broker": "7ab67f0d3e4b54f5",
      "x": 910,
      "y": 2920,
      "wires": []
  },
  {
      "id": "618ab980a4953422",
      "type": "mqtt out",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "dropDown",
      "qos": "",
      "retain": "false",
      "respTopic": "",
      "contentType": "",
      "userProps": "",
      "correl": "",
      "expiry": "",
      "broker": "7ab67f0d3e4b54f5",
      "x": 890,
      "y": 3000,
      "wires": []
  },
  {
      "id": "f5a2dc3e153110b3",
      "type": "mqtt out",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "CF",
      "qos": "",
      "retain": "false",
      "respTopic": "",
      "contentType": "",
      "userProps": "",
      "correl": "",
      "expiry": "",
      "broker": "7ab67f0d3e4b54f5",
      "x": 650,
      "y": 200,
      "wires": []
  },
  {
      "id": "118184373ba91172",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "5",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "",
      "payloadType": "date",
      "x": 190,
      "y": 1060,
      "wires": [
          [
              "5fb41ee6ebc82d07",
              "695f734cbd1e241e"
          ]
      ]
  },
  {
      "id": "5fb41ee6ebc82d07",
      "type": "function",
      "z": "03278fe65db6b388",
      "name": "checkAlarms",
      "func": "let date = new Date();\nlet hour = date.getHours();\nlet minute = date.getMinutes();\nlet schedule = flow.get(\"schedule\");\nlet days = flow.get(\"days\");\nlet alarmTriggered = 0;\n\n//Alarm 1\n// 19800000 is the shift with UTC (5.30) which need to be reduced.\n\nlet A1_en = flow.get(\"A1_en\");\nlet A1_date = new Date(flow.get(\"A1_Time\")- 19800000);\n\n\n//Alarm 2\nlet A2_en = flow.get(\"A2_en\");\nlet A2_date = new Date(flow.get(\"A2_Time\")- 19800000);\n\n//Alarm 3\nlet A3_en = flow.get(\"A3_en\");\nlet A3_date = new Date(flow.get(\"A3_Time\")- 19800000);\n\n\nconst A_hours = [A1_date.getHours(), A2_date.getHours(), A3_date.getHours()];\nconst A_minutes = [A1_date.getMinutes(),A2_date.getMinutes(), A3_date.getMinutes() ];\nconst A_en = [A1_en, A2_en, A3_en ];\n\nif (schedule && days > 0) {\n    for (let i = 0; i < 3; i++){\n        if (A_en[i] && A_hours[i] == hour && A_minutes[i] == minute){\n            \n            msg.payload = i;\n            alarmTriggered = 1;\n            \n            //return msg;\n        }\n        \n    }\n   msg.trig = alarmTriggered\n   return msg; \n}\n\n\n\n\n\n\n\n\n\n",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 450,
      "y": 940,
      "wires": [
          [
              "be5eae2b8fa55793",
              "662def2ea7ad05d1",
              "6aeb807f8a47d9a0"
          ]
      ]
  },
  {
      "id": "394da446909a8663",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "v": "",
              "vt": "num"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": false,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "0",
      "payloadType": "num",
      "x": 630,
      "y": 40,
      "wires": [
          [
              "6e3fd1e24bac90ad"
          ]
      ]
  },
  {
      "id": "62e100e48d7b4596",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "30",
      "payloadType": "num",
      "x": 190,
      "y": 140,
      "wires": [
          [
              "81101b33f48b44ef"
          ]
      ]
  },
  {
      "id": "e5a997b3305464f5",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "0.75",
      "payloadType": "num",
      "x": 190,
      "y": 200,
      "wires": [
          [
              "218748b39c61bc34"
          ]
      ]
  },
  {
      "id": "771ca594f631ea98",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "set schedule",
      "rules": [
          {
              "t": "set",
              "p": "schedule",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 690,
      "y": 300,
      "wires": [
          []
      ]
  },
  {
      "id": "8a7c9b902575123f",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "true",
      "payloadType": "bool",
      "x": 230,
      "y": 300,
      "wires": [
          [
              "3cecee6e54306c60"
          ]
      ]
  },
  {
      "id": "e3fa5f06c5dd40e4",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "set no. of days",
      "rules": [
          {
              "t": "set",
              "p": "days",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 900,
      "y": 400,
      "wires": [
          []
      ]
  },
  {
      "id": "e5264a8d42ed6b51",
      "type": "function",
      "z": "03278fe65db6b388",
      "name": "Reduce count",
      "func": "let days = flow.get(\"days\");\ndays = Math.max(days-1,0);\nmsg.payload = days;\nreturn msg;",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 440,
      "y": 400,
      "wires": [
          [
              "e7d83dcbcfbd3091"
          ]
      ]
  },
  {
      "id": "48e7d22628487fa7",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "12:00 AM Trigger",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "",
      "crontab": "00 12 * * *",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "true",
      "payloadType": "bool",
      "x": 210,
      "y": 400,
      "wires": [
          [
              "e5264a8d42ed6b51"
          ]
      ]
  },
  {
      "id": "a152b6be2464aec3",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "set A1 Time",
      "rules": [
          {
              "t": "set",
              "p": "A1_Time",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 730,
      "y": 560,
      "wires": [
          []
      ]
  },
  {
      "id": "5ecedb46c3b2d392",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "set A1 enable",
      "rules": [
          {
              "t": "set",
              "p": "A1_en",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 740,
      "y": 500,
      "wires": [
          []
      ]
  },
  {
      "id": "ee84a93c92f58e9f",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "set A2 Time",
      "rules": [
          {
              "t": "set",
              "p": "A2_Time",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 730,
      "y": 660,
      "wires": [
          []
      ]
  },
  {
      "id": "f3126434fb2e3a5e",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "set A2 enable",
      "rules": [
          {
              "t": "set",
              "p": "A2_en",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 740,
      "y": 620,
      "wires": [
          []
      ]
  },
  {
      "id": "dedbefa83899ba15",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "set A3 Time",
      "rules": [
          {
              "t": "set",
              "p": "A3_Time",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 730,
      "y": 780,
      "wires": [
          []
      ]
  },
  {
      "id": "b375f326e80604bd",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "set A3 enable",
      "rules": [
          {
              "t": "set",
              "p": "A3_en",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 740,
      "y": 740,
      "wires": [
          []
      ]
  },
  {
      "id": "6d7ec10d09fd0d6d",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "true",
      "payloadType": "bool",
      "x": 230,
      "y": 580,
      "wires": [
          [
              "cf473738265b83af",
              "ca4af46b465a9d55",
              "d59a6f9711ea177a"
          ]
      ]
  },
  {
      "id": "1225dcf2d2df6c45",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "0",
      "payloadType": "num",
      "x": 230,
      "y": 660,
      "wires": [
          [
              "cf473738265b83af",
              "48c8f03ed7239d90",
              "6af1eb1c50275622",
              "e1ac8e488d866b2e"
          ]
      ]
  },
  {
      "id": "9c71c8ab4eeb534d",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "1",
      "payloadType": "num",
      "x": 230,
      "y": 1660,
      "wires": [
          [
              "01b69b064b2280b2"
          ]
      ]
  },
  {
      "id": "8231c3884f153f5b",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "30",
      "payloadType": "num",
      "x": 230,
      "y": 1700,
      "wires": [
          [
              "472d287d436c7df8"
          ]
      ]
  },
  {
      "id": "8c677e4e0e8ec358",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "5",
      "payloadType": "num",
      "x": 330,
      "y": 2240,
      "wires": [
          [
              "e2516e7f24252046"
          ]
      ]
  },
  {
      "id": "5c6181a4fee75ce7",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "75",
      "payloadType": "num",
      "x": 330,
      "y": 2300,
      "wires": [
          [
              "b3702a074a04d8f0"
          ]
      ]
  },
  {
      "id": "f80a64bbed4ac3e0",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "1",
      "payloadType": "num",
      "x": 270,
      "y": 2860,
      "wires": [
          [
              "0b1b290297a22fe3"
          ]
      ]
  },
  {
      "id": "f7a2050b4a0d0f95",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "256",
      "payloadType": "num",
      "x": 270,
      "y": 2920,
      "wires": [
          [
              "a78e592f189be178"
          ]
      ]
  },
  {
      "id": "eb96ab6bcafb80ce",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "1",
      "payloadType": "str",
      "x": 270,
      "y": 3000,
      "wires": [
          [
              "f98eb1bf01b9749d"
          ]
      ]
  },
  {
      "id": "d9c900a0cd1f6c4f",
      "type": "inject",
      "z": "03278fe65db6b388",
      "name": "Initial Trigger",
      "props": [
          {
              "p": "payload"
          },
          {
              "p": "topic",
              "vt": "str"
          }
      ],
      "repeat": "",
      "crontab": "",
      "once": true,
      "onceDelay": 0.1,
      "topic": "",
      "payload": "true",
      "payloadType": "bool",
      "x": 110,
      "y": 3520,
      "wires": [
          [
              "31032827bd37105d",
              "bc7d7672aab25412",
              "bf25441f3c723b9e"
          ]
      ]
  },
  {
      "id": "c4fd86aef3c0ae4e",
      "type": "debug",
      "z": "03278fe65db6b388",
      "name": "debug 4",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 660,
      "y": 260,
      "wires": []
  },
  {
      "id": "be5eae2b8fa55793",
      "type": "mqtt out",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "alramTrigger",
      "qos": "",
      "retain": "",
      "respTopic": "",
      "contentType": "",
      "userProps": "",
      "correl": "",
      "expiry": "",
      "broker": "7ab67f0d3e4b54f5",
      "x": 890,
      "y": 940,
      "wires": []
  },
  {
      "id": "1eec4d0502904e30",
      "type": "change",
      "z": "03278fe65db6b388",
      "name": "set mainSW",
      "rules": [
          {
              "t": "set",
              "p": "mainSW",
              "pt": "flow",
              "to": "payload",
              "tot": "msg"
          }
      ],
      "action": "",
      "property": "",
      "from": "",
      "to": "",
      "reg": false,
      "x": 1050,
      "y": 100,
      "wires": [
          []
      ]
  },
  {
      "id": "662def2ea7ad05d1",
      "type": "trigger",
      "z": "03278fe65db6b388",
      "name": "",
      "op1": "1",
      "op2": "0",
      "op1type": "num",
      "op2type": "str",
      "duration": "0",
      "extend": false,
      "overrideDelay": false,
      "units": "ms",
      "reset": "",
      "bytopic": "topic",
      "topic": "trig",
      "outputs": 1,
      "x": 900,
      "y": 860,
      "wires": [
          []
      ]
  },
  {
      "id": "6aeb807f8a47d9a0",
      "type": "debug",
      "z": "03278fe65db6b388",
      "name": "debug 5",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 720,
      "y": 1000,
      "wires": []
  },
  {
      "id": "46c4bdaa177523c7",
      "type": "mqtt out",
      "z": "03278fe65db6b388",
      "name": "",
      "topic": "dateTime",
      "qos": "",
      "retain": "",
      "respTopic": "",
      "contentType": "",
      "userProps": "",
      "correl": "",
      "expiry": "",
      "broker": "7ab67f0d3e4b54f5",
      "x": 740,
      "y": 1180,
      "wires": []
  },
  {
      "id": "51870271fc2491cb",
      "type": "debug",
      "z": "03278fe65db6b388",
      "name": "debug 6",
      "active": true,
      "tosidebar": true,
      "console": false,
      "tostatus": false,
      "complete": "false",
      "statusVal": "",
      "statusType": "auto",
      "x": 800,
      "y": 1280,
      "wires": []
  },
  {
      "id": "695f734cbd1e241e",
      "type": "function",
      "z": "03278fe65db6b388",
      "name": "dateTime",
      "func": "let date = new Date();\nlet hour = date.getHours();\nlet minute = date.getMinutes();\n\nlet day = date.getDate();\nlet month = date.getMonth() + 1;\nlet year = date.getFullYear();\n\nfunction formatTime(hour, minute) {\n  \n  let hourStr = hour.toString();\n  let minuteStr = minute.toString();\n\n  \n  if (hour < 10) {\n    hourStr = \"0\" + hourStr;\n  }\n  if (minute < 10) {\n    minuteStr = \"0\" + minuteStr;\n  }\n\n  \n  let timeStr = hourStr + \":\" + minuteStr;\n\n  return timeStr;\n}\n\n\nfunction formatDate(day, month, year) {\n  // Convert day, month, and year to strings\n  let dayStr = day.toString();\n  let monthStr = month.toString();\n  let yearStr = year.toString();\n\n  // Pad the strings with leading zeros if necessary\n  if (day < 10) {\n    dayStr = \"0\" + dayStr;\n  }\n  if (month < 10) {\n    monthStr = \"0\" + monthStr;\n  }\n\n  // Combine the day, month, and year into a string\n  let dateStr = dayStr + \"/\" + monthStr + \"/\" + yearStr;\n\n  return dateStr;\n}\n\n\n// Alarm 1\n// 19800000 is the shift with UTC (5.30) which need to be reduced.\nlet A1_date = new Date(flow.get(\"A1_Time\")- 19800000);\n\n//Alarm 2\nlet A2_date = new Date(flow.get(\"A2_Time\")- 19800000);\n\n//Alarm 3\nlet A3_date = new Date(flow.get(\"A3_Time\")- 19800000);\n\n\nconst A_hours = [A1_date.getHours(), A2_date.getHours(), A3_date.getHours()];\nconst A_minutes = [A1_date.getMinutes(),A2_date.getMinutes(), A3_date.getMinutes() ];\n\n\n\nlet currentInfo =  formatDate(day, month, year)+ \" \"\n                       + formatTime(hour, minute)+\" \"\n                        + formatTime(A_hours[0], A_minutes[0])+\" \"\n                          +formatTime(A_hours[1], A_minutes[1])+\" \"\n                            +formatTime(A_hours[2], A_minutes[2]);\nmsg.payload = currentInfo ;\nreturn msg; \n\n\n\n\n\n\n\n\n\n\n\n",
      "outputs": 1,
      "noerr": 0,
      "initialize": "",
      "finalize": "",
      "libs": [],
      "x": 500,
      "y": 1180,
      "wires": [
          [
              "46c4bdaa177523c7",
              "51870271fc2491cb"
          ]
      ]
  },
  {
      "id": "5932fcf52f6182f7",
      "type": "ui_spacer",
      "z": "03278fe65db6b388",
      "name": "spacer",
      "group": "d07fc097a1134607",
      "order": 3,
      "width": 2,
      "height": 1
  },
  {
      "id": "ce721f6c97b0437b",
      "type": "ui_spacer",
      "z": "03278fe65db6b388",
      "name": "spacer",
      "group": "d07fc097a1134607",
      "order": 8,
      "width": 6,
      "height": 1
  },
  {
      "id": "95fb69e5da933fde",
      "type": "ui_spacer",
      "z": "03278fe65db6b388",
      "name": "spacer",
      "group": "e886155af4f13c04",
      "order": 3,
      "width": 6,
      "height": 1
  },
  {
      "id": "c06f466dbec9db88",
      "type": "ui_group",
      "name": "Buzzer",
      "tab": "079889f1ad7dbb11",
      "order": 1,
      "disp": true,
      "width": "6",
      "collapse": false,
      "className": ""
  },
  {
      "id": "95870bd4bd4cda3d",
      "type": "ui_group",
      "name": "Shade Controller",
      "tab": "079889f1ad7dbb11",
      "order": 6,
      "disp": true,
      "width": 6,
      "collapse": false,
      "className": ""
  },
  {
      "id": "6f939c528b0be4ae",
      "type": "ui_group",
      "name": "Scheduler",
      "tab": "079889f1ad7dbb11",
      "order": 2,
      "disp": true,
      "width": 6,
      "collapse": false,
      "className": ""
  },
  {
      "id": "7f5537f35d1d89c4",
      "type": "ui_group",
      "name": "Light Intensity",
      "tab": "079889f1ad7dbb11",
      "order": 5,
      "disp": true,
      "width": "6",
      "collapse": false,
      "className": ""
  },
  {
      "id": "af359eb7cc82a93f",
      "type": "ui_group",
      "name": "Temperature",
      "tab": "079889f1ad7dbb11",
      "order": 3,
      "disp": true,
      "width": 6,
      "collapse": false,
      "className": ""
  },
  {
      "id": "1a115d827a1091dd",
      "type": "ui_group",
      "name": "Humidity",
      "tab": "079889f1ad7dbb11",
      "order": 4,
      "disp": true,
      "width": "6",
      "collapse": false,
      "className": ""
  },
  {
      "id": "e886155af4f13c04",
      "type": "ui_group",
      "name": "Buzzer",
      "tab": "1178da4cebe5a0ea",
      "order": 1,
      "disp": true,
      "width": "6",
      "collapse": false,
      "className": ""
  },
  {
      "id": "9f845f9b1b22e142",
      "type": "ui_group",
      "name": "Features",
      "tab": "1178da4cebe5a0ea",
      "order": 2,
      "disp": true,
      "width": "6",
      "collapse": false,
      "className": ""
  },
  {
      "id": "7ab67f0d3e4b54f5",
      "type": "mqtt-broker",
      "name": "",
      "broker": "https://test.mosquitto.org/",
      "port": "1883",
      "clientid": "",
      "autoConnect": true,
      "usetls": false,
      "protocolVersion": "4",
      "keepalive": "60",
      "cleansession": true,
      "birthTopic": "",
      "birthQos": "0",
      "birthPayload": "",
      "birthMsg": {},
      "closeTopic": "",
      "closeQos": "0",
      "closePayload": "",
      "closeMsg": {},
      "willTopic": "",
      "willQos": "0",
      "willPayload": "",
      "willMsg": {},
      "userProps": "",
      "sessionExpiry": ""
  },
  {
      "id": "079889f1ad7dbb11",
      "type": "ui_tab",
      "name": "Medibox",
      "icon": "dashboard",
      "order": 2,
      "disabled": false,
      "hidden": false
  },
  {
      "id": "1178da4cebe5a0ea",
      "type": "ui_tab",
      "name": "Settings",
      "icon": "dashboard",
      "order": 4,
      "disabled": false,
      "hidden": false
  }
]